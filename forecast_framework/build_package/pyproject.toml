# pyproject.toml (in root directory)
# Alternative to setup.py
[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "forecasting-framework"
version = "1.0.0"
description = "A reusable forecasting framework with domain-specific components"
readme = "README.md"
authors = [{name = "Your Name", email = "your.email@company.com"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "scikit-learn>=1.0.0",
]

[project.optional-dependencies]
dev = ["pytest", "black", "flake8", "mypy"]
deployment = ["twine", "build"]

[project.scripts]
forecast-cli = "forecasting_framework.cli:main"

[project.urls]
Homepage = "https://github.com/your-org/forecasting-framework"
Repository = "https://github.com/your-org/forecasting-framework"

[tool.setuptools_scm]
write_to = "forecasting_framework/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true